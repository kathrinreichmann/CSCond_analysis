hypoOne <- c("non-predictive", "one", 22, 0)
means <- rbind(means, hypoMany, hypoOne)
means$type_discrete <- as.factor(means$type_discrete)
means$diff <- as.numeric(means$diff)
means$se <- as.numeric(means$se)
means
#barplot with standard errors
barplotDiff <- ggplot(means, aes (x = condition, y = diff, fill = type_discrete)) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= diff - se, ymax= diff + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Evaluative Ratings for Components (non-predictive is hypothetical)") +
scale_fill_brewer(palette = "Set3") +
scale_x_discrete(name = "\nCondition") +
scale_y_continuous (name = "Mean Difference Scores\n", breaks = seq(0, 100, 10), limits = c(0, 100)) +
theme_classic() +
labs(fill = "Component") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
barplotDiff
#with targets
HLMtarget <- aggregate(response ~ subject + condition + val + type_specific + category + cs_selected, new_direct, mean)
HLMtarget$nr_obs <- aggregate(response ~ subject + condition + val + type_specific + category + cs_selected, new_direct, length)[[7]]
#right now: do not take different targets into account (participants are nested within targets)
temp <- aggregate(response ~ subject + condition + val + type_specific + category, new_direct, mean)
temp$nr_obs <- aggregate(response ~ subject + condition + val + type_specific + category, new_direct, length)[[6]]
temp$nr_obs
## order data
temp <- temp[order(temp$subject, temp$val, temp$type_specific),]
## cbind positive and negative scores
HLMpos <- temp[temp$val == "pos",]
HLMpos$pos <- HLMpos$response
HLMpos$response <- NULL
HLMneg <- temp[temp$val == "neg",]
HLMneg$neg <- HLMneg$response
HLM <- cbind(HLMpos, HLMneg$neg, HLMneg$category)
HLM$val <- NULL
HLM$neg <- HLM$`HLMneg$neg`
HLM$`HLMneg$neg` <- NULL
## calculate difference scores
HLM$diff <- HLM$pos - HLM$neg
## rename many_one to many and one_one to one
HLM$condition <- factor(HLM$condition, labels = c("many", "one"), levels = c("many_one", "one_one"))
#reverse dummy coding for condiiton
HLM$condition <- factor(HLM$condition, labels = c("one", "many"), levels = c("one", "many"))
## discard levels of type we don't need
HLM <- HLM[!HLM$type_specific == "Group",]
HLM <- HLM[!HLM$type_specific == "GS different",]
HLM <- HLM[!HLM$type_specific == "GS same",]
HLM <- HLM[!HLM$type_specific == "CS",]
##categorical variable: generalization as discrete
HLM$type_discrete <- factor(HLM$type_specific, labels = c("predictive"), levels = c("Feature"))
means <- aggregate(diff ~ type_discrete + condition, HLM, mean)
means$se <- aggregate(diff ~ type_discrete + condition, HLM, se)[[3]]
means
str(HLM)
str(direct)
#(1) mean scores for every category and participant
centerDirect <- aggregate(response ~ subject + condition + category + type_specific + val, direct, mean)
#condition_code: 0 =  many
centerDirect[centerDirect$subject == "02a80kdxm7",] #check
#(2) use CS as predictor for GS same
multiLevel <- centerDirect[centerDirect$type_specific == "CS",]
respGS <- centerDirect[centerDirect$type_specific == "GS same",]
multiLevel$GS <- respGS$response
multiLevel$CS <- multiLevel$response
multiLevel$response <- NULL
multiLevel$type_specific <- NULL
head(multiLevel)
multiLevel[multiLevel$subject == "02a80kdxm7",] #check
#(3) plot the two different levels involved in the analysis
dotplot <- ggplot(multiLevel, aes (x = CS, y = GS, color = category)) +
facet_grid(. ~ condition) +
geom_point(show.legend = TRUE) +
geom_smooth(method = 'lm') +
scale_color_brewer(palette = "Paired") +
scale_x_continuous(name = "\nCS Ratings") +
scale_y_continuous (name = "GS (new) Ratings\n") +
theme_classic() +
labs(fill = "Categories") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
dotplot
#(4) build up the models
#add random intercept for category
lmer1 <- lmer(GS ~ 1 + (1| subject), data = multiLevel, REML = FALSE)
#add CSs as predictor
lmer2 <- lmer(GS ~ CS + (1 | subject), data = multiLevel, REML = FALSE)
#add random slopes
lmer3 <- lmer(GS ~ CS + (CS | subject), data = multiLevel, REML = FALSE )
#add interaction with condition
lme4 <- lmer(GS ~ CS*condition + (CS | subject), data = multiLevel, REML = FALSE )
#(5) pick best model
anova(lme1, lme2, lme3, lme4)
#(6) results
summary(lme4)
#add interaction with condition
lmer4 <- lmer(GS ~ CS*condition + (CS | subject), data = multiLevel, REML = FALSE )
#z-standardize GS and CS
multiLevel$GS <- scale (multiLevel$GS, center = TRUE, scale = TRUE)
multiLevel$CS <- scale (multiLevel$CS, center = TRUE, scale = TRUE)
#add random intercept for category
lmer1 <- lmer(GS ~ 1 + (1| subject), data = multiLevel, REML = FALSE)
#add CSs as predictor
lmer2 <- lmer(GS ~ CS + (1 | subject), data = multiLevel, REML = FALSE)
#add random slopes
lmer3 <- lmer(GS ~ CS + (CS | subject), data = multiLevel, REML = FALSE )
#add interaction with condition
lmer4 <- lmer(GS ~ CS*condition + (CS | subject), data = multiLevel, REML = FALSE )
#(5) pick best model
anova(lmer1, lmer2, lmer3, lmer4)
#(6) results
summary(lmer4)
ot individual slopes
indPlotData <- HLM[1:280,]
indPlotData <- indPlotData[order(indPlotData$subject),]
indPlot3 <- ggplot(indPlotData[!indPlotData$condition == "one",], aes(x = type_discrete, y = diff, group = subject, color = condition, shape = condition)) +
facet_wrap(.~ subject, nrow = 5) +
geom_point(show.legend = TRUE, alpha = .6) +
geom_smooth(method = "lm", alpha = .6, se = FALSE) +
scale_color_brewer(palette = "Paired")
indPlot3
### plot raw data
HLMdotplot <- aggregate(diff ~ subject + type_discrete + condition, HLM, mean)
means <- aggregate(diff ~ condition + type_discrete, HLM, mean)
means$se <- aggregate(diff ~ condition + type_discrete, HLM, se)[[3]]
means
dotplot1 <- ggplot(HLMdotplot, aes (x = type_discrete, y = diff, group = subject, color = condition, shape = condition)) +
geom_line() +
geom_point(show.legend = TRUE, alpha = .4) +
geom_point(data = means, size = 4, alpha = .9) +
geom_line(data = means, mapping = aes(group = condition), color = "red", size = 1) +
scale_color_brewer(palette = "Paired") +
scale_x_discrete(name = "\nStimulus Type") +
scale_y_continuous (name = "Difference Scores for subjects i and stimulus j\n", breaks = seq(-100, 200, 50), limits = c(-100, 200)) +
theme_classic() +
ggtitle("Raw Data") +
labs(fill = "Condition") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
dotplot1
#barplot with standard errors
barplotDiff <- ggplot(means, aes (x = type_discrete, y = diff, fill = condition)) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= diff - se, ymax= diff + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Mean Differences (with Standard Errors)") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\nType") +
scale_y_continuous (name = "Mean Difference Scores\n", breaks = seq(0, 100, 10), limits = c(0, 100)) +
theme_classic() +
labs(fill = "Condition") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
barplotDiff
##### random intercept model with fixed effect of stimulus type
model1 <- lmer(diff ~ type_discrete + (1|subject), data = HLM, REML = FALSE)
summary(model1)
#create data frame for plotting random effects
random1CS <- data.frame(diff = coef(model1)$subject[,1], type_discrete = "CS", subject = rownames(coef(model1)$subject))
random1GS <- data.frame(diff = coef(model1)$subject[,1] + coef(model1)$subject[,2], type_discrete = "GS", subject = rownames(coef(model1)$subject))
random1 <- rbind(random1CS, random1GS)
#fixed effect
fix1CS <- data.frame(diff = summary(model1)$coef[1, "Estimate"], type_discrete = "CS")
fix1GS <- data.frame(diff = summary(model1)$coef[1, "Estimate"] + summary(model1)$coef[2, "Estimate"], type_discrete = "GS")
fix1 <- rbind(fix1CS, fix1GS)
fix1
plotModel1 <- ggplot(random1, aes (x = as.factor(type_discrete), y = diff, group = as.factor(subject))) +
geom_line(color = "grey") +
geom_point(color = "grey") +
geom_line(data = fix1, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1) +
geom_point(data = fix1, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1.5) +
scale_color_brewer(palette = "Paired") +
scale_x_discrete (name = "\nStimulus Type", limits=c("CS","GS")) +
scale_y_continuous (name = "Difference Scores for subjects i and stimulus j\n", breaks = seq(-100, 200, 50), limits = c(-100, 200)) +
theme_classic() +
ggtitle("Data fitted under Model 1") +
labs(fill = "condition\n subject i") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
plotModel1
##### + random slope
model2 <- lmer(diff ~ type_discrete + (type_discrete|subject), data = HLM, REML = FALSE)
summary(model2)
#create data frame for plotting random effects
random2CS <- data.frame(diff = coef(model2)$subject[,1], type_discrete = "CS", subject = rownames(coef(model2)$subject))
random2GS <- data.frame(diff = coef(model2)$subject[,1] + coef(model2)$subject[,2], type_discrete = "GS", subject = rownames(coef(model2)$subject))
random2 <- rbind(random2CS, random2GS)
#fixed effect
fix2CS <- data.frame(diff = summary(model2)$coef[1, "Estimate"], type_discrete = "CS")
fix2GS <- data.frame(diff = summary(model2)$coef[1, "Estimate"] + summary(model2)$coef[2, "Estimate"], type_discrete = "GS")
fix2 <- rbind(fix2CS, fix2GS)
fix2
plotModel2 <- ggplot(random2, aes (x = as.factor(type_discrete), y = diff, group = as.factor(subject))) +
geom_line(color = "grey") +
geom_point(color = "grey") +
geom_line(data = fix2, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1) +
geom_point(data = fix2, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1.5) +
scale_color_brewer(palette = "Paired") +
scale_x_discrete (name = "\nStimulus Type", limits=c("CS","GS")) +
scale_y_continuous (name = "Difference Scores for subjects i and stimulus j\n", breaks = seq(-100, 200, 50), limits = c(-100, 200)) +
theme_classic() +
ggtitle("Data fitted under Model 2") +
labs(fill = "condition\n subject i") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
plotModel2
##### +difference variable
model3 <- lmer(diff ~ type_discrete*condition + (type_discrete|subject), data = HLM, REML = FALSE)
summary(model3)
#create data frame for plotting random effects
subjcond <- HLM[!duplicated(HLM$subject),c("subject", "condition")] ##add condition
random3CS <- data.frame(diff = coef(model3)$subject[,1], type_discrete = "CS", subject = rownames(coef(model3)$subject))
random3CS <- merge(random3CS, subjcond, by.y = "subject")
random3GS <- data.frame(diff = coef(model3)$subject[,1] + coef(model3)$subject[,2], type_discrete = "GS", subject = rownames(coef(model3)$subject))
random3GS <- merge(random3GS, subjcond, by.y = "subject")
random3 <- rbind(random3CS, random3GS)
#fixed effect
fix3CSMany <- data.frame(diff = summary(model3)$coef[1, "Estimate"], type_discrete = "CS")
fix3GSMany <- data.frame(diff = summary(model3)$coef[1, "Estimate"] + summary(model3)$coef[2, "Estimate"], type_discrete = "GS")
fix3Many <- rbind(fix3CSMany, fix3GSMany)
fix3Many
fix3CSOne <- data.frame(diff = summary(model3)$coef[1, "Estimate"] + summary(model3)$coef[3, "Estimate"], type_discrete = "CS")
fix3GSOne <- data.frame(diff = (summary(model3)$coef[1, "Estimate"] + summary(model3)$coef[3, "Estimate"]) + (summary(model3)$coef[2, "Estimate"] + summary(model3)$coef[4, "Estimate"]), type_discrete = "GS")
fix3One <- rbind(fix3CSOne, fix3GSOne)
fix3One
plotModel3 <- ggplot(random3, aes (x = as.factor(type_discrete), y = diff, group = as.factor(subject), color = condition)) +
geom_line(alpha = .6) +
geom_point(alpha = .4) +
geom_line(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1) +
geom_point(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1.5) +
geom_text(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), label = "many", color = "red", vjust = -1) +
geom_line(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), color = "darkred", size = 1) +
geom_point(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), color = "darkred", size = 1.5) +
geom_text(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), label = "one", color = "darkred", vjust = 1) +
scale_color_brewer(palette = "Paired") +
scale_x_discrete (name = "\nStimulus Type", limits=c("CS","GS")) +
scale_y_continuous (name = "Difference Scores for subjects i and stimulus j\n", breaks = seq(-100, 200, 50), limits = c(-100, 200)) +
theme_classic() +
ggtitle("Data fitted under Model 3") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
plotModel3
#? - random slope
model4 <- lmer(diff ~ type_discrete*condition + (1|subject), data = HLM, REML = FALSE)
summary(model4)
#model comparison
anova(model1, model2, model3)
anova(model3, model4)
#model 3 with best fit
#parameter interpretation
plot(model3)
summary(model3)
##aggregate over targets and category
#with targets
HLMtarget <- aggregate(response ~ subject + condition + val + type_specific + category + cs_selected, new_direct, mean)
HLMtarget$nr_obs <- aggregate(response ~ subject + condition + val + type_specific + category + cs_selected, new_direct, length)[[7]]
#right now: do not take different targets into account (participants are nested within targets)
temp <- aggregate(response ~ subject + condition + val + type_specific + category, new_direct, mean)
temp$nr_obs <- aggregate(response ~ subject + condition + val + type_specific + category, new_direct, length)[[6]]
temp$nr_obs
## order data
temp <- temp[order(temp$subject, temp$val, temp$type_specific),]
## cbind positive and negative scores
HLMpos <- temp[temp$val == "pos",]
HLMpos$pos <- HLMpos$response
HLMpos$response <- NULL
HLMneg <- temp[temp$val == "neg",]
HLMneg$neg <- HLMneg$response
HLM <- cbind(HLMpos, HLMneg$neg, HLMneg$category)
HLM$val <- NULL
HLM$neg <- HLM$`HLMneg$neg`
HLM$`HLMneg$neg` <- NULL
## calculate difference scores
HLM$diff <- HLM$pos - HLM$neg
##TEST: with 6 difference scores for GSs
## cbind positive and negative scores
HLMtarget <- HLMtarget[order(HLMtarget$subject, HLMtarget$val, HLMtarget$type_specific),]
HLMpos <- HLMtarget[HLMtarget$val == "pos",]
HLMpos$pos <- HLMpos$response
HLMpos$response <- NULL
head(HLMpos)
HLMneg <- HLMtarget[HLMtarget$val == "neg",]
HLMneg$neg <- HLMneg$response
HLM <- cbind(HLMpos, HLMneg$neg, HLMneg$category)
head(HLM)
HLM$val <- NULL
HLM$neg <- HLM$`HLMneg$neg`
HLM$`HLMneg$neg` <- NULL
dim(HLM)
HLM$diff <- HLM$pos - HLM$neg
HLM <- HLM[!HLM$type_specific =="GS different", ]
HLM <- HLM[!HLM$type_specific == "Group",]
HLM <- HLM[!HLM$type_specific == "Feature",]
## ? use type as a continuous predictor
HLM$type_continuous <- factor(HLM$type_specific, labels = c("0", "1"), levels = c("CS", "GS same"))
HLM$type_continuous <- as.numeric(HLM$type_continuous)
## rename many_one to many and one_one to one
HLM$condition <- factor(HLM$condition, labels = c("many", "one"), levels = c("many_one", "one_one"))
##categorical variable: generalization as discrete
HLM$type_discrete <- factor(HLM$type_specific, labels = c("CS", "GS"), levels = c("CS", "GS same"))
#reverse dummy coding for condiiton
HLM$condition <- factor(HLM$condition, labels = c("one", "many"), levels = c("one", "many"))
#plot individual slopes
indPlotData <- HLM[1:280,]
indPlotData <- indPlotData[order(indPlotData$subject),]
indPlot3 <- ggplot(indPlotData[!indPlotData$condition == "one",], aes(x = type_discrete, y = diff, group = subject, color = condition, shape = condition)) +
facet_wrap(.~ subject, nrow = 5) +
geom_point(show.legend = TRUE, alpha = .6) +
geom_smooth(method = "lm", alpha = .6, se = FALSE) +
scale_color_brewer(palette = "Paired")
indPlot3
### plot raw data
HLMdotplot <- aggregate(diff ~ subject + type_discrete + condition, HLM, mean)
means <- aggregate(diff ~ condition + type_discrete, HLM, mean)
means$se <- aggregate(diff ~ condition + type_discrete, HLM, se)[[3]]
means
dotplot1 <- ggplot(HLMdotplot, aes (x = type_discrete, y = diff, group = subject, color = condition, shape = condition)) +
geom_line() +
geom_point(show.legend = TRUE, alpha = .4) +
geom_point(data = means, size = 4, alpha = .9) +
geom_line(data = means, mapping = aes(group = condition), color = "red", size = 1) +
scale_color_brewer(palette = "Paired") +
scale_x_discrete(name = "\nStimulus Type") +
scale_y_continuous (name = "Difference Scores for subjects i and stimulus j\n", breaks = seq(-100, 200, 50), limits = c(-100, 200)) +
theme_classic() +
ggtitle("Raw Data") +
labs(fill = "Condition") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
dotplot1
#barplot with standard errors
barplotDiff <- ggplot(means, aes (x = type_discrete, y = diff, fill = condition)) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= diff - se, ymax= diff + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Mean Differences (with Standard Errors)") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\nType") +
scale_y_continuous (name = "Mean Difference Scores\n", breaks = seq(0, 100, 10), limits = c(0, 100)) +
theme_classic() +
labs(fill = "Condition") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
barplotDiff
##### random intercept model with fixed effect of stimulus type
model1 <- lmer(diff ~ type_discrete + (1|subject), data = HLM, REML = FALSE)
summary(model1)
#create data frame for plotting random effects
random1CS <- data.frame(diff = coef(model1)$subject[,1], type_discrete = "CS", subject = rownames(coef(model1)$subject))
random1GS <- data.frame(diff = coef(model1)$subject[,1] + coef(model1)$subject[,2], type_discrete = "GS", subject = rownames(coef(model1)$subject))
random1 <- rbind(random1CS, random1GS)
#fixed effect
fix1CS <- data.frame(diff = summary(model1)$coef[1, "Estimate"], type_discrete = "CS")
fix1GS <- data.frame(diff = summary(model1)$coef[1, "Estimate"] + summary(model1)$coef[2, "Estimate"], type_discrete = "GS")
fix1 <- rbind(fix1CS, fix1GS)
fix1
plotModel1 <- ggplot(random1, aes (x = as.factor(type_discrete), y = diff, group = as.factor(subject))) +
geom_line(color = "grey") +
geom_point(color = "grey") +
geom_line(data = fix1, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1) +
geom_point(data = fix1, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1.5) +
scale_color_brewer(palette = "Paired") +
scale_x_discrete (name = "\nStimulus Type", limits=c("CS","GS")) +
scale_y_continuous (name = "Difference Scores for subjects i and stimulus j\n", breaks = seq(-100, 200, 50), limits = c(-100, 200)) +
theme_classic() +
ggtitle("Data fitted under Model 1") +
labs(fill = "condition\n subject i") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
plotModel1
##### + random slope
model2 <- lmer(diff ~ type_discrete + (type_discrete|subject), data = HLM, REML = FALSE)
summary(model2)
#create data frame for plotting random effects
random2CS <- data.frame(diff = coef(model2)$subject[,1], type_discrete = "CS", subject = rownames(coef(model2)$subject))
random2GS <- data.frame(diff = coef(model2)$subject[,1] + coef(model2)$subject[,2], type_discrete = "GS", subject = rownames(coef(model2)$subject))
random2 <- rbind(random2CS, random2GS)
#fixed effect
fix2CS <- data.frame(diff = summary(model2)$coef[1, "Estimate"], type_discrete = "CS")
fix2GS <- data.frame(diff = summary(model2)$coef[1, "Estimate"] + summary(model2)$coef[2, "Estimate"], type_discrete = "GS")
fix2 <- rbind(fix2CS, fix2GS)
fix2
plotModel2 <- ggplot(random2, aes (x = as.factor(type_discrete), y = diff, group = as.factor(subject))) +
geom_line(color = "grey") +
geom_point(color = "grey") +
geom_line(data = fix2, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1) +
geom_point(data = fix2, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1.5) +
scale_color_brewer(palette = "Paired") +
scale_x_discrete (name = "\nStimulus Type", limits=c("CS","GS")) +
scale_y_continuous (name = "Difference Scores for subjects i and stimulus j\n", breaks = seq(-100, 200, 50), limits = c(-100, 200)) +
theme_classic() +
ggtitle("Data fitted under Model 2") +
labs(fill = "condition\n subject i") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
plotModel2
##### +difference variable
model3 <- lmer(diff ~ type_discrete*condition + (type_discrete|subject), data = HLM, REML = FALSE)
summary(model3)
#create data frame for plotting random effects
subjcond <- HLM[!duplicated(HLM$subject),c("subject", "condition")] ##add condition
random3CS <- data.frame(diff = coef(model3)$subject[,1], type_discrete = "CS", subject = rownames(coef(model3)$subject))
random3CS <- merge(random3CS, subjcond, by.y = "subject")
random3GS <- data.frame(diff = coef(model3)$subject[,1] + coef(model3)$subject[,2], type_discrete = "GS", subject = rownames(coef(model3)$subject))
random3GS <- merge(random3GS, subjcond, by.y = "subject")
random3 <- rbind(random3CS, random3GS)
#fixed effect
fix3CSMany <- data.frame(diff = summary(model3)$coef[1, "Estimate"], type_discrete = "CS")
fix3GSMany <- data.frame(diff = summary(model3)$coef[1, "Estimate"] + summary(model3)$coef[2, "Estimate"], type_discrete = "GS")
fix3Many <- rbind(fix3CSMany, fix3GSMany)
fix3Many
fix3CSOne <- data.frame(diff = summary(model3)$coef[1, "Estimate"] + summary(model3)$coef[3, "Estimate"], type_discrete = "CS")
fix3GSOne <- data.frame(diff = (summary(model3)$coef[1, "Estimate"] + summary(model3)$coef[3, "Estimate"]) + (summary(model3)$coef[2, "Estimate"] + summary(model3)$coef[4, "Estimate"]), type_discrete = "GS")
fix3One <- rbind(fix3CSOne, fix3GSOne)
fix3One
plotModel3 <- ggplot(random3, aes (x = as.factor(type_discrete), y = diff, group = as.factor(subject), color = condition)) +
geom_line(alpha = .6) +
geom_point(alpha = .4) +
geom_line(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1) +
geom_point(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1.5) +
geom_text(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), label = "many", color = "red", vjust = -1) +
geom_line(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), color = "darkred", size = 1) +
geom_point(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), color = "darkred", size = 1.5) +
geom_text(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), label = "one", color = "darkred", vjust = 1) +
scale_color_brewer(palette = "Paired") +
scale_x_discrete (name = "\nStimulus Type", limits=c("CS","GS")) +
scale_y_continuous (name = "Difference Scores for subjects i and stimulus j\n", breaks = seq(-100, 200, 50), limits = c(-100, 200)) +
theme_classic() +
ggtitle("Data fitted under Model 3") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
plotModel3
#? - random slope
model4 <- lmer(diff ~ type_discrete*condition + (1|subject), data = HLM, REML = FALSE)
summary(model4)
#model comparison
anova(model1, model2, model3)
anova(model3, model4)
#model 3 with best fit
#parameter interpretation
plot(model3)
summary(model3)
#simple slopes (no additional information)
CSs <- lm (diff ~ condition, HLM[HLM$type_discrete == "CS",])
summary(CSs)
GSs <- lm (diff ~ condition, HLM[HLM$type_discrete == "GS", ])
summary(GSs)
means
plot(model3)
64.16 - 40-2
64.16 - 40.2
(64.16 + (- 40.2)) + 22.91
(64.16 + (- 40.2)) + (22.91 - 0.74)
(64.16 + (-0.74) + (-40.2 + 22.91)
)
24.6 + 22.91
24.6 + 22.91 - 0.74
summary(model3)$coef
fix3CSOne <- data.frame(diff = summary(model3)$coef[1, "Estimate"] + summary(model3)$coef[3, "Estimate"], type_discrete = "CS")
fix3GSOne <- data.frame(diff = (summary(model3)$coef[1, "Estimate"] + summary(model3)$coef[2, "Estimate"]) + (summary(model3)$coef[3, "Estimate"] + summary(model3)$coef[4, "Estimate"]), type_discrete = "GS")
fix3One <- rbind(fix3CSOne, fix3GSOne)
fix3One
plotModel3 <- ggplot(random3, aes (x = as.factor(type_discrete), y = diff, group = as.factor(subject), color = condition)) +
geom_line(alpha = .6) +
geom_point(alpha = .4) +
geom_line(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1) +
geom_point(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1.5) +
geom_text(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), label = "many", color = "red", vjust = -1) +
geom_line(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), color = "darkred", size = 1) +
geom_point(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), color = "darkred", size = 1.5) +
geom_text(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), label = "one", color = "darkred", vjust = 1) +
scale_color_brewer(palette = "Paired") +
scale_x_discrete (name = "\nStimulus Type", limits=c("CS","GS")) +
scale_y_continuous (name = "Difference Scores for subjects i and stimulus j\n", breaks = seq(-100, 200, 50), limits = c(-100, 200)) +
theme_classic() +
ggtitle("Data fitted under Model 3") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
plotModel3
plotModel3 <- ggplot(random3, aes (x = as.factor(type_discrete), y = diff, group = as.factor(subject), color = condition)) +
geom_line(alpha = .6) +
geom_point(alpha = .4) +
geom_line(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1) +
geom_point(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1.5) +
geom_text(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), label = "many", color = "red", vjust = -2) +
geom_line(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), color = "darkred", size = 1) +
geom_point(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), color = "darkred", size = 1.5) +
geom_text(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), label = "one", color = "darkred", vjust = 2) +
scale_color_brewer(palette = "Paired") +
scale_x_discrete (name = "\nStimulus Type", limits=c("CS","GS")) +
scale_y_continuous (name = "Difference Scores for subjects i and stimulus j\n", breaks = seq(-100, 200, 50), limits = c(-100, 200)) +
theme_classic() +
ggtitle("Data fitted under Model 3") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
plotModel3
summary(model3)
fix3CSMany <- data.frame(diff = summary(model3)$coef[1, "Estimate"] + summary(model3)$coef[3, "Estimate"], type_discrete = "CS")
fix3GSMany <- data.frame(diff = (summary(model3)$coef[1, "Estimate"] + summary(model3)$coef[2, "Estimate"]) + (summary(model3)$coef[3, "Estimate"] + summary(model3)$coef[4, "Estimate"]), type_discrete = "GS")
fix3Many <- rbind(fix3CSMany, fix3GSMany)
fix3Many
fix3CSOne <- data.frame(diff = summary(model3)$coef[1, "Estimate"], type_discrete = "CS")
fix3GSOne <- data.frame(diff = summary(model3)$coef[1, "Estimate"] + summary(model3)$coef[2, "Estimate"], type_discrete = "GS")
fix3One <- rbind(fix3CSOne, fix3GSOne)
fix3One
plotModel3 <- ggplot(random3, aes (x = as.factor(type_discrete), y = diff, group = as.factor(subject), color = condition)) +
geom_line(alpha = .6) +
geom_point(alpha = .4) +
geom_line(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1) +
geom_point(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), color = "red", size = 1.5) +
geom_text(data = fix3Many, mapping = aes(y = diff, x = type_discrete, group = 1), label = "many", color = "red", vjust = -2) +
geom_line(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), color = "darkred", size = 1) +
geom_point(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), color = "darkred", size = 1.5) +
geom_text(data = fix3One, mapping = aes(y = diff, x = type_discrete, group = 1), label = "one", color = "darkred", vjust = 2) +
scale_color_brewer(palette = "Paired") +
scale_x_discrete (name = "\nStimulus Type", limits=c("CS","GS")) +
scale_y_continuous (name = "Difference Scores for subjects i and stimulus j\n", breaks = seq(-100, 200, 50), limits = c(-100, 200)) +
theme_classic() +
ggtitle("Data fitted under Model 3") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
plotModel3
summary(model3)$coef
means
(64.91-0.75)+(-40.3+22.91)
anova(model3)
