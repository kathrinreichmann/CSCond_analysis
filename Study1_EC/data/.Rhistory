new_many <- new_many[!new_many$type_specific == "CS",]
new_indirect <- rbind(new_one, new_many)
for (subject in unique(indirect$subject)){
if (indirect$condition[indirect$subject == subject] == "many_one"){
for (cat in 1:4){
temp <- indirect[indirect$subject == subject & indirect$type_specific == "CS" & indirect$category == cat,]
select <- temp[1,]
#concat only 1 CS rating per participant
new_indirect <- rbind(new_indirect, select)
}
}
}
head(new_indirect)
temp <- new_indirect
# order data
temp <- temp[order(temp$subject, temp$val, temp$type_specific),]
# omit information we don't need
temp <- temp[!temp$type_specific =="GS different", ]
temp <- temp[!temp$type_specific == "Feature",]
## rename many_one to many and one_one to one
temp$condition <- factor(temp$condition, labels = c("one", "many"), levels = c("one_one", "many_one"))
##categorical variable: generalization as discrete
temp$type_specific <- factor(temp$type_specific, labels = c("CS", "GS"), levels = c("CS", "GS same"))
head(temp)
## effect code variables
#condition
temp$condition_effect <- 0
for (line in 1:dim(temp)[1]){
if (temp$condition[line] == "one"){
temp$condition_effect[line] <- -0.5
} else {
temp$condition_effect[line] <- 0.5
}
}
temp$condition_effect
#valence
temp$val_effect <- 0
for (line in 1:dim(temp)[1]){
if (temp$val[line] == "neg"){
temp$val_effect[line] <- -0.5
} else {
temp$val_effect[line] <- 0.5
}
}
temp$condition_effect
str(temp)
#type
temp$type_effect <- 0
for (line in 1:dim(temp)[1]){
if (temp$type_specific[line] == "CS"){
temp$type_effect[line] <- -0.5
} else {
temp$type_effect[line] <- 0.5
}
}
temp$type_specific
str(temp)
#set default to dummy coding
options(contrasts = c("contr.treatment", "contr.poly"))
### specify models
indirect <- temp
indirect$response <- as.numeric(indirect$response)
indirect <- indirect[order(indirect$subject, indirect$val, indirect$type_specific, indirect$category),]
indirectProp <- aggregate(response ~ subject + val_effect + val + type_effect + type_specific
+ condition + condition_effect, indirect, sum)
indirectProp$length <- aggregate(response ~ subject + val_effect + val + type_effect + type_specific
+ condition + condition_effect, indirect, length)[[8]]
indirectProp$prop <- indirectProp$response/indirectProp$length
hist(indirectProp$prop)
head(indirectProp)
head(indirectProp)
qqnorm(indirectProp$prop)
head(indirect)
#random intercepts
glmer1 <- glmer(response ~ val_effect*condition_effect*type_effect
+ (1|subject),
indirect, binomial)
#random slopes
glmer2 <- glmer(response ~ val_effect*condition_effect*type_effect
+ (val_effect*type_effect|subject),
indirect, binomial)
#random slopes
glmer2 <- glmer(response ~ val_effect*condition_effect*type_effect
+ (val_effect*type_effect|subject),
indirect, binomial)
anova(lmer1, lmer2)
anova(glmer1, glmer2)
summary(glmer2, corr = FALSE)
plot(glmer1)
test <- lmer(prop ~ val_effect*condition_effect*type_effect
+ (val_effect + type_effect|subject),
indirectProp, REML=FALSE)
summary(test)
#model2
glmer2_2 <- glmer(response ~ condition_effect*type_effect + val_effect:condition:type_specific
+ (val_effect*type_effect|subject),
indirect, binomial)
#model2
glmer2_2 <- glmer(response ~ condition_effect*type_effect + val_effect:condition:type_specific
+ (val_effect*type_effect|subject),
indirect, binomial)
summary(lmer2_2, corr = FALSE)
summary(glmer1)
#plot direct
indirect_plot1 <- aggregate(prop ~ condition*type_specific*val, indirect, mean)
indirect_plot1$se <- aggregate(prop ~ condition*type_specific*val, indirect, se) [[4]]
#plot direct
indirect_plot1 <- aggregate(prop ~ condition*type_specific*val, indirectProp, mean)
indirect_plot1$se <- aggregate(prop ~ condition*type_specific*val, indirectProp, se) [[4]]
barplot2 <- ggplot(indirect_plot1, aes (y = response, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= response - se, ymax= response + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Direct Evaluative Ratings\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
scale_y_continuous (name = "Ratings\n", limits = c(-50, 50)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2
barplot2 <- ggplot(indirect_plot1, aes (y = prop, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= response - se, ymax= response + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Direct Evaluative Ratings\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
scale_y_continuous (name = "Ratings\n", limits = c(-50, 50)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2
indirect_plot1
barplot2 <- ggplot(indirect_plot1, aes (y = prop, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= prop - se, ymax= prop + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Direct Evaluative Ratings\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
scale_y_continuous (name = "Ratings\n", limits = c(-50, 50)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2
barplot2 <- ggplot(indirect_plot1, aes (y = prop, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= prop - se, ymax= prop + se), width=.2,
position=position_dodge(.9)) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
scale_y_continuous (name = "Proportion pleasant out of all responses\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2
barplot2 <- ggplot(indirect_plot1, aes (y = prop, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= prop - se, ymax= prop + se), width=.2,
position=position_dodge(.9)) +
hline(yintercept = 0.5) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
scale_y_continuous (name = "Proportion pleasant out of all responses\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2
barplot2 <- ggplot(indirect_plot1, aes (y = prop, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= prop - se, ymax= prop + se), width=.2,
position=position_dodge(.9)) +
geom_hline(yintercept = 0.5) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
scale_y_continuous (name = "Proportion pleasant out of all responses\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2
#model3
lmer2_3 <- lmer(prop ~ type_effect*val_effect + type_effect*condition_effect* +
+ condition_effect:val_effect:type_specific
+ (val_effect*type_effect|subject),
indirectProp, REML = FALSE)
#model3
glmer2_3 <- glmer(prop ~ type_effect*val_effect + type_effect*condition_effect* +
+ condition_effect:val_effect:type_specific
+ (val_effect*type_effect|subject),
indirect, binomial)
#model3
glmer2_3 <- glmer(response ~ type_effect*val_effect + type_effect*condition_effect* +
+ condition_effect:val_effect:type_specific
+ (val_effect*type_effect|subject),
indirect, binomial)
barplot2 <- ggplot(indirect, aes (y = response, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_col(position = position_dodge()) +
#geom_errorbar(aes(ymin= prop - se, ymax= prop + se), width=.2,
#              position=position_dodge(.9)) +
geom_hline(yintercept = 0.5) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
#scale_y_continuous (name = "Proportion pleasant out of all responses\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2
barplot2 <- ggplot(indirect, aes (y = response, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_hist(position = position_dodge()) +
#geom_errorbar(aes(ymin= prop - se, ymax= prop + se), width=.2,
#              position=position_dodge(.9)) +
geom_hline(yintercept = 0.5) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
#scale_y_continuous (name = "Proportion pleasant out of all responses\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2 <- ggplot(indirect, aes (y = response, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_histogram() +
#geom_errorbar(aes(ymin= prop - se, ymax= prop + se), width=.2,
#              position=position_dodge(.9)) +
geom_hline(yintercept = 0.5) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
#scale_y_continuous (name = "Proportion pleasant out of all responses\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2
#plot direct
indirect_plot1 <- aggregate(response ~ condition*type_specific*val, indirectProp, sum)
indirect_plot1
#plot direct
indirect_plot1 <- aggregate(response ~ condition*type_specific*val, indirect, sum)
indirect_plot1$se <- aggregate(response ~ condition*type_specific*val, indirect, se) [[4]]
indirect_plot1
#plot direct
indirect_plot1 <- aggregate(response ~ condition*type_specific*val, indirect, mean)
indirect_plot1$se <- aggregate(response ~ condition*type_specific*val, indirect, se) [[4]]
indirect_plot1
barplot2 <- ggplot(indirect_plot1, aes (y = response, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_histogram(position = position_dodge()) +
geom_errorbar(aes(ymin= prop - se, ymax= prop + se), width=.2,
position=position_dodge(.9)) +
geom_hline(yintercept = 0.5) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
#scale_y_continuous (name = "Proportion pleasant out of all responses\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2
barplot2 <- ggplot(indirect_plot1, aes (y = response, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_histogram(position = position_dodge()) +
geom_errorbar(aes(ymin= response - se, ymax= response + se), width=.2,
position=position_dodge(.9)) +
geom_hline(yintercept = 0.5) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
scale_y_continuous (name = "Proportion pleasant out of all responses\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2
barplot2 <- ggplot(indirect_plot1, aes (y = response, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_bar(position = position_dodge()) +
geom_errorbar(aes(ymin= response - se, ymax= response + se), width=.2,
position=position_dodge(.9)) +
geom_hline(yintercept = 0.5) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
#scale_y_continuous (name = "Proportion pleasant out of all responses\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2
barplot2 <- ggplot(indirect_plot1, aes (y = response, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= response - se, ymax= response + se), width=.2,
position=position_dodge(.9)) +
geom_hline(yintercept = 0.5) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
#scale_y_continuous (name = "Proportion pleasant out of all responses\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2
#model3
glmer2_3 <- glmer(response ~ type_effect*val_effect + type_effect*condition_effect* +
+ condition_effect:val_effect:type_specific
+ (val_effect+type_effect|subject),
indirect, binomial)
#model3
glmer2_3 <- glmer(response ~ type_effect*val_effect + type_effect*condition_effect* +
+ condition_effect:val_effect:type_specific
+ (val_effect+type_effect|subject),
indirect, binomial)
summary(glmer2_3, corr = FALSE)
#model3
glmer2_3 <- glmer(response ~ type_effect*val_effect + type_effect*condition_effect +
+ condition_effect:val_effect:type_specific
+ (val_effect+type_effect|subject),
indirect, binomial)
summary(glmer2_3, corr = FALSE)
barplot2 <- ggplot(indirect_plot1, aes (y = response, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= response - se, ymax= response + se), width=.2,
position=position_dodge(.9)) +
geom_hline(yintercept = 0.5) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
scale_y_continuous (name = "Proportion pleasant out of all responses\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2
barplot2 <- ggplot(indirect_plot1, aes (y = response, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= response - se, ymax= response + se), width=.2,
position=position_dodge(.9)) +
geom_hline(yintercept = 0.5) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
scale_y_continuous (name = "AMP responses\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot2
summary(glmer2_2, corr = FALSE)
indirect_plot1 <- aggregate(prop ~ condition*type_specific*val, indirectProp, mean)
indirect_plot1$se <- aggregate(prop ~ condition*type_specific*val, indirectProp, se) [[4]]
barplot3 <- ggplot(indirect_plot1, aes (y = prop, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= prop - se, ymax= prop + se), width=.2,
position=position_dodge(.9)) +
geom_hline(yintercept = 0.5) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
scale_y_continuous (name = "AMP responses\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot3
barplot2
barplot2
barplot3
barplot2
barplot2
barplot3 <- ggplot(indirect_plot1, aes (y = prop, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= prop - se, ymax= prop + se), width=.2,
position=position_dodge(.9)) +
geom_hline(yintercept = 0.5) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
scale_y_continuous (name = "'pleasant' response rates\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
indirect_plot1 <- aggregate(prop ~ condition*type_specific*val, indirectProp, mean)
indirect_plot1$se <- aggregate(prop ~ condition*type_specific*val, indirectProp, se) [[4]]
barplot3 <- ggplot(indirect_plot1, aes (y = prop, x = condition, fill = val)) +
facet_grid(. ~ type_specific) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= prop - se, ymax= prop + se), width=.2,
position=position_dodge(.9)) +
geom_hline(yintercept = 0.5) +
ggtitle("AMP\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Condition") +
scale_y_continuous (name = "'pleasant' response rates\n", limits = c(0,1)) +
theme_classic() +
labs(fill = "Valence") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot3
#plot model1
memory_plot2 <- aggregate(prop ~ condition + type, memoryProp, mean)
memory_plot2$se <- aggregate(prop ~ condition + type, memoryProp, se)[[3]]
barplot1 <- ggplot(memory_plot2, aes (y = prop, x = type, fill = condition)) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= prop - se, ymax= prop + se), width=.2,
position=position_dodge(.9)) +
ggtitle("DRM\n") +
scale_color_brewer(palette = "Set2") +
scale_x_discrete(name = "\n Type") +
scale_y_continuous (name = "Proportion 'old'\n") +
theme_classic() +
labs(fill = "Condition") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot1
#plot model1
memory_plot2 <- aggregate(memoryResp ~ condition + type, memory, mean)
memory_plot2$se <- aggregate(prop ~ condition + type, memory, se)[[3]]
memory_plot2$se <- aggregate(memoryResp ~ condition + type, memory, se)[[3]]
barplot1 <- ggplot(memory_plot2, aes (y = memoryResp, x = type, fill = condition)) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= prop - se, ymax= prop + se), width=.2,
position=position_dodge(.9)) +
ggtitle("DRM\n") +
scale_color_brewer(palette = "Set2") +
scale_x_discrete(name = "\n Type") +
scale_y_continuous (name = "Proportion 'old'\n") +
theme_classic() +
labs(fill = "Condition") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot1
barplot1 <- ggplot(memory_plot2, aes (y = memoryResp, x = type, fill = condition)) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= memoryResp - se, ymax= memoryResp + se), width=.2,
position=position_dodge(.9)) +
ggtitle("DRM\n") +
scale_color_brewer(palette = "Set2") +
scale_x_discrete(name = "\n Type") +
scale_y_continuous (name = "Proportion 'old'\n") +
theme_classic() +
labs(fill = "Condition") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot1
barplot1 <- ggplot(memory_plot2, aes (y = memoryResp, x = type, fill = condition)) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= memoryResp - se, ymax= memoryResp + se), width=.2,
position=position_dodge(.9)) +
ggtitle("DRM\n") +
scale_color_brewer(palette = "Set2") +
scale_x_discrete(name = "\n Type") +
scale_y_continuous (name = '"old" response rates\n') +
theme_classic() +
labs(fill = "Condition") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot1
barplot1 <- ggplot(memory_plot2, aes (y = memoryResp, x = type, fill = condition)) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= memoryResp - se, ymax= memoryResp + se), width=.2,
position=position_dodge(.9)) +
ggtitle("DRM\n") +
scale_color_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Type") +
scale_y_continuous (name = '"old" response rates\n') +
theme_classic() +
labs(fill = "Condition") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot1
barplot1 <- ggplot(memory_plot2, aes (y = memoryResp, x = type, fill = condition)) +
geom_col(position = position_dodge()) +
geom_errorbar(aes(ymin= memoryResp - se, ymax= memoryResp + se), width=.2,
position=position_dodge(.9)) +
ggtitle("DRM\n") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\n Type") +
scale_y_continuous (name = '"old" response rates\n') +
theme_classic() +
labs(fill = "Condition") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 14),
text = element_text(size=14))
barplot1
