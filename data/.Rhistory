CSGSsame.one <- CSGSsame[CSGSsame$condition == "one_one",]
#CS
t.test(CSGSsame.many$diff[CSGSsame.many$type_specific == "CS"], CSGSsame.one$diff[CSGSsame.one$type_specific == "CS"], paired = FALSE,  var.equal = FALSE)
#GS same
t.test(CSGSsame.many$diff[CSGSsame.many$type_specific == "GS same"], CSGSsame.one$diff[CSGSsame.one$type_specific == "GS same"], paired = FALSE,  var.equal = FALSE)
### ?? lmer: type_specific as grouping variable
#baseline model
baseline <- lmer(diff ~ 1 + (type_specific|subject), CSGSsame)
baseline
#including main effect of condition
conditionM <- lmer(diff ~ condition + (type_specific|subject),  CSGSsame)
conditionM
#including main effect of type
typeM <- lmer(diff ~ condition + type_specific + (type_specific|subject),  CSGSsame)
typeM
#including interaction condition and type
type_condition <- lmer(diff ~ condition*type_specific + (type_specific|subject),  CSGSsame)
type_condition
#compare models
anova(baseline, conditionM, typeM, type_condition)
summary(type_condition)
################### CS Variability x Type (CS vs. GS same vs. GS different vs. Feature)
#Hypothesis: interaction type x CS Variability
CSGSFeat <- dataDirect[!dataDirect$type_specific == "Group",]
#### mixed-model ANOVA with CS Variability x Type (CS vs. GS same vs. GS different vs. Feature)
direct.type <- aggregate(diff ~ condition + type_specific + subject, CSGSFeat, mean)
aov_specific <- aov_car(diff ~ condition*type_specific + Error(subject/type_specific), direct.type, anova_table = list("pes"))
summary(aov_specific)
#Departure from Sphericity, use Greenhouse-Geisser correction
#??as linear model
baseline <- lmer(diff ~ 1 + (type_specific|subject),  CSGSFeat, REML = FALSE)
conditionM <- lmer(diff ~ condition + (type_specific|subject),  CSGSFeat, REML = FALSE)
typeM <- lmer(diff ~ condition + type_specific + (type_specific|subject),  CSGSFeat, REML = FALSE)
type_condition <- lmer(diff ~ condition*type_specific + (type_specific|subject),  CSGSFeat, REML = FALSE)
anova(baseline, conditionM, typeM, type_condition)
summary(typeM)
#simple slopes
#CS
lm1 <- lm(diff ~ condition, dataDirect[dataDirect$type_specific == "CS",])
summary(lm1)
lm2 <- lm(diff ~ condition, dataDirect[dataDirect$type_specific == "GS same",])
summary(lm2)
lm3 <- lm(diff ~ condition, dataDirect[dataDirect$type_specific == "GS different",])
summary(lm3)
lm4 <- lm(diff ~ condition, dataDirect[dataDirect$type_specific == "Feature",])
summary(lm4)
################### CS Variability for "ALL" ratings
Group <- dataDirect[dataDirect$type_specific == "Group",]
t.test(Group$diff[Group$condition == "many_one"], Group$diff[Group$condition == "one_one"], paired = FALSE, var.equal = TRUE)
#as linear model:
lm5 <- lm(diff ~ condition, dataDirect[dataDirect$type_specific == "Group",])
summary(lm5)
################### randomly select 2 CSs in "many-to-one"
new_one <- direct[direct$condition == "one_one",]
new_many <- direct[direct$condition == "many_one",]
new_many <- new_many[!new_many$type_specific == "CS",]
new_direct <- rbind(new_one, new_many)
for (subject in unique(direct$subject)){
if (direct$condition[direct$subject == subject] == "many_one"){
for (cat in 1:4){
temp <- direct[direct$subject == subject & direct$type_specific == "CS" & direct$category == cat,]
select <- temp[1:2,]
new_direct <- rbind(new_direct, select)
}
}
}
#calculate difference scores
dataDirect_new <- aggregate(response ~ subject + condition + measure + val + type_specific, new_direct, mean)
dataDirect_new$nr_obs <- aggregate(response ~ subject + condition + measure + val + type_specific, new_direct, length)[[6]]
#calculate differences between positive and negative valence, considering each type of measure
for (name in unique(dataDirect_new$type_specific)){
temp <- dataDirect_new[dataDirect_new$type_specific == name,];
dataDirect_new$diff[dataDirect_new$type_specific == name] <- temp$response[temp$val == "pos"] - temp$response[temp$val == "neg"]
}
# Plot
direct.type_specific <- aggregate(diff ~ condition + type_specific, dataDirect_new, mean)
direct.type_specific$se <- aggregate(diff ~ condition + type_specific, dataDirect_new, se)[[3]]
#direct.type_specific
barplotDiff <- ggplot(direct.type_specific, aes (x = type_specific, y = diff, fill = condition)) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= diff - se, ymax= diff + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Difference Scores") +
scale_fill_brewer(palette = "Paired") +
scale_x_discrete(name = "\nType") +
scale_y_continuous (name = "Rating [Pos] - Rating [Neg]\n", breaks = seq(0, 70, 10), limits = c(0, 70)) +
theme_classic() +
labs(fill = "CS Variability") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12))
barplotDiff
# inference statistics
CSGSFeat_new <- dataDirect_new[!dataDirect_new$type_specific == "Group",]
direct.type <- aggregate(diff ~ condition + type_specific + subject, CSGSFeat_new, mean)
aov_specific <- aov_car(diff ~ condition*type_specific + Error(subject/type_specific), direct.type, anova_table = list("pes"))
summary(aov_specific)
#results don't change
#Boxplots different conditions
diffDirect <- ggplot(dataDirect_new, aes (x = type_specific, y = diff, fill = condition)) +
stat_boxplot(geom = "errorbar") +
geom_boxplot(show.legend = TRUE) +
ggtitle("Differences") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_fill_brewer(palette = "Blues") +
scale_y_continuous (name = "Pos - Neg", breaks = seq(-100, 200, 25), limits = c(-50, 100))
diffDirect
################## Additional plots
#Boxplots different conditions
diffDirect <- ggplot(dataDirect, aes (x = type_specific, y = diff, fill = condition)) +
stat_boxplot(geom = "errorbar") +
geom_boxplot(show.legend = TRUE) +
ggtitle("Differences") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_fill_brewer(palette = "Blues") +
scale_y_continuous (name = "Pos - Neg", breaks = seq(-100, 200, 25), limits = c(-50, 100))
diffDirect
#Barplot for both valences separately
barplotDirect <- aggregate(response ~ type_specific + condition + val,direct, mean)
barplotDirect$se <- aggregate(response ~ type_specific + condition + val, direct, se)[[4]]
barplot.val <- ggplot(barplotDirect, aes (x = type_specific, y = response, fill = condition)) +
facet_grid(. ~ val) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= response - se, ymax= response + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Positive and Negative Pairings") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_fill_brewer(palette = "Paired")
barplot.val
#Boxplot positive pairings
positiveDirect <- ggplot(direct[direct$val == "pos",], aes (x = type_specific, y = response, fill = condition)) +
stat_boxplot(geom = "errorbar") +
geom_boxplot(show.legend = TRUE) +
ggtitle("Positive Pairings") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_fill_brewer(palette = "Blues")
positiveDirect
#Boxplot negative pairings
negativeDirect <- ggplot(dataDirect[dataDirect$val == "neg",], aes (x = type_specific, y = response, fill = condition)) +
stat_boxplot(geom = "errorbar") +
geom_boxplot(show.legend = TRUE) +
ggtitle("Negative Pairings") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_fill_brewer(palette = "Blues")
negativeDirect
################## (2) Variability x Type x Measure
#plots
barplotMeasure <- aggregate(diff ~ type_specific + condition + measure, dataDirect, mean)
barplotMeasure$se <- aggregate(diff ~ type_specific + condition + measure, dataDirect, se)[[4]]
plotMeasure <- ggplot(barplotMeasure, aes (x = type_specific, y = diff, fill = condition)) +
facet_grid(. ~ measure) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= diff - se, ymax= diff + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Direct Measure") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_fill_brewer(palette = "Paired") +
scale_y_continuous (name = "Pos - Neg", breaks = seq(-25, 125, 25), limits = c(-10, 100))
plotMeasure
plotMeasure <- ggplot(barplotMeasure, aes (x = type_specific, y = diff, fill = condition)) +
facet_grid(. ~ measure) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= diff - se, ymax= diff + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Direct Measure") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_fill_brewer(palette = "Paired") +
scale_y_continuous (name = "Rating[Pos] - Rating[Neg]", breaks = seq(-25, 125, 25), limits = c(-10, 100))
plotMeasure
head(dataIndirect)
#generate variable prob
dataIndirect <- aggregate(rt ~ subject + condition_code + condition + measure + val + type + type_specific, indirect, mean )
#generate variable prob
dataRT <- aggregate(rt ~ subject + condition_code + condition + measure + val + type + type_specific, indirect, mean )
dataIndirect <- aggregate(response ~ subject + condition_code + condition + measure + val + type + type_specific, indirect, sum )
dataIndirect$nr_val <- aggregate(response ~ subject + condition_code + condition + measure + val + type + type_specific, indirect, length)[[8]]
dataIndirect$prob <- (dataIndirect$response/dataIndirect$nr_val) #prob: proportion "angenehm" of all stimuli in a combination of conditions
head(dataIndirect)
#generate variable diff
for (name in unique(dataIndirect$type_specific)){
temp <- dataIndirect[dataIndirect$type_specific == name,];
dataIndirect$diff[dataIndirect$type_specific == name] <- temp$prob[temp$val == "pos"] - temp$prob[temp$val == "neg"]
}
#columns for all "angenehm" and "unangenehm" answers
dataIndirect$an <- dataIndirect$response #column for "unangenehm" answer
dataIndirect$un <- dataIndirect$nr_val - dataIndirect$response #column for "angenehm" answer
head(dataIndirect)
#generate variable prob
dataRT <- aggregate(rt ~ subject + condition_code + condition + measure + val + type + type_specific, indirect, mean )
head(dataRT)
dataRT$se <- aggregate(rt ~ subject + condition_code + condition + measure + val + type + type_specific, indirect, se )
head(dataRT)
#generate variable prob
dataRT <- aggregate(rt ~ subject + condition_code + condition + measure + val + type + type_specific, indirect, mean )
dataRT$se <- aggregate(rt ~ subject + condition_code + condition + measure + val + type + type_specific, indirect, se )[[8]]
head(dataRT)
barplotRT <- ggplot(dataRT, aes (x = type_specific, y = rt, fill = condition)) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= diff - se, ymax= diff + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Indirect Measure") +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
labs(fill = "CS Variability") +
scale_y_continuous (name = "[Prob. 'an' | pos] - [Prob. 'an' | neg]", breaks = seq(0, 0.3, 0.1), limits = c(0, 0.3))
barplotRT
barplotRT <- ggplot(dataRT, aes (x = type_specific, y = rt, fill = condition)) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= rt - se, ymax= rt + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Indirect Measure") +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
labs(fill = "CS Variability") +
scale_y_continuous (name = "[Prob. 'an' | pos] - [Prob. 'an' | neg]", breaks = seq(0, 0.3, 0.1), limits = c(0, 0.3))
barplotRT
barplotRT <- ggplot(dataRT, aes (x = type_specific, y = rt, fill = condition)) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= rt - se, ymax= rt + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Indirect Measure") +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
labs(fill = "CS Variability") +
scale_y_continuous (name = "[Prob. 'an' | pos] - [Prob. 'an' | neg]")
barplotRT
#generate variable prob
dataRT <- aggregate(rt ~ subject + condition_code + condition + measure + val + type + type_specific, indirect, mean )
head(dataRT)
plot.RT <- aggregate(rt ~ condition + type_specific, dataRT, mean)
#Plot
plot.RT <- aggregate(rt ~ condition + type_specific, dataRT, mean)
plot.RT$se <- aggregate(rt ~ condition + type_specific, dataRT, se)[[3]]
plot
head(plot.RT)
barplotRT <- ggplot(plot.RT, aes (x = type_specific, y = rt, fill = condition)) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= rt - se, ymax= rt + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Indirect Measure") +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
labs(fill = "CS Variability") +
scale_y_continuous (name = "[Prob. 'an' | pos] - [Prob. 'an' | neg]")
barplotRT
barplotRT <- ggplot(plot.RT, aes (x = type_specific, y = rt, fill = condition)) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= rt - se, ymax= rt + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Indirect Measure") +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
labs(fill = "CS Variability") +
scale_y_continuous (name = "Reaction Times")
barplotRT
#Plot for each valence separately
plot.RT <- aggregate(rt ~ condition + type_specific + val, dataRT, mean)
plot.RT$se <- aggregate(rt ~ condition + type_specific + val, dataRT, se)[[4]]
head(plot.RT)
barplotRT <- ggplot(plot.RT, aes (x = type_specific, y = rt, fill = condition)) +
facet_grid(~.val) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= rt - se, ymax= rt + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Indirect Measure") +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
labs(fill = "CS Variability") +
scale_y_continuous (name = "Reaction Times")
barplotRT
barplotRT <- ggplot(plot.RT, aes (x = type_specific, y = rt, fill = condition)) +
facet_grid(. ~val) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= rt - se, ymax= rt + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Indirect Measure") +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
labs(fill = "CS Variability") +
scale_y_continuous (name = "Reaction Times")
barplotRT
plot.RT <- aggregate(rt ~ condition + type_specific + measure, dataRT, mean)
plot.RT$se <- aggregate(rt ~ condition + type_specific + measure, dataRT, se)[[4]]
head(plot.RT)
barplotRT <- ggplot(plot.RT, aes (x = type_specific, y = rt, fill = condition)) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= rt - se, ymax= rt + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Indirect Measure") +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
labs(fill = "CS Variability") +
scale_y_continuous (name = "Reaction Times")
barplotRT
barplotRT <- ggplot(plot.RT, aes (x = type_specific, y = rt, fill = condition)) +
facet_grid(. ~ measure) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= rt - se, ymax= rt + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Indirect Measure") +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
labs(fill = "CS Variability") +
scale_y_continuous (name = "Reaction Times")
barplotRT
categoryIndirect <- aggregate(response ~  condition  + val + type_specific + category, indirect, sum )
categoryIndirect$nr_val <- aggregate(response ~ condition + val + type_specific + category, indirect, length)[[5]]
categoryIndirect$prob <- (categoryIndirect$response/categoryIndirect$nr_val)
#head(categoryIndirect)
plot.categories <- ggplot(categoryIndirect, aes (x = category, y = prob, fill = val)) +
stat_boxplot(geom = "errorbar") +
geom_boxplot(show.legend = TRUE) +
geom_hline(yintercept = 0.5, color = "red") +
ggtitle("Categories") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_fill_brewer(palette = "Blues")
plot.categories
presOrder <- aggregate(response ~ nr_pres + val , indirect, sum)
presOrder$nr_val <- aggregate(response ~ nr_pres + val, indirect, length) [[3]]
presOrder$se <- aggregate(response ~ nr_pres + val, indirect, se) [[3]]
presOrder$prob <- (presOrder$response/presOrder$nr_val)
#head(presOrder)
#aggregate(prob ~ val + type_specific, dataIndirect, mean)
plot.presOrder <- ggplot(presOrder, aes (x = nr_pres, y = prob, col = val)) +
geom_point(show.legend = TRUE) +
geom_hline(yintercept = 0.5, color = "red") +
ggtitle("Positive and Negative Pairings") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_color_brewer(palette = "Set1") +
scale_y_continuous(name = "Prob. of 'Angenehm'")
plot.presOrder
presOrder <- aggregate(rt ~ condition + type_specific, indirect, mean)
presOrder$se <- aggregate(rt ~ condition + type_specific, indirect, se) [[2]]
#aggregate(prob ~ val + type_specific, dataIndirect, mean)
plot.presOrder <- ggplot(presOrder, aes (x = type_specific, y = rt, col = condition)) +
geom_point(show.legend = TRUE) +
ggtitle("Reaction Times") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_color_brewer(palette = "Set1") +
scale_y_continuous(name = "Presentation Order")
plot.presOrder
barplotRT <- ggplot(dataRT, aes (x = type_specific, y = rt, fill = condition)) +
facet_grid(. ~ measure) +
stat_boxplot(geom = "errorbar") +
geom_boxplot(show.legend = TRUE) +
ggtitle("Indirect Measure") +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
labs(fill = "CS Variability") +
scale_y_continuous (name = "Reaction Times")
barplotRT
#generate data set with reaction times
dataRT <- aggregate(rt ~ subject + condition_code + condition + measure + val + type + type_specific, indirect, mean )
dataRT <- dataRT[!dataRT$rt > 10000,]
head(dataRT)
plot.RT <- aggregate(rt ~ condition + type_specific, dataRT, mean)
plot.RT$se <- aggregate(rt ~ condition + type_specific, dataRT, se)[[3]]
head(plot.RT)
barplotRT <- ggplot(plot.RT, aes (x = type_specific, y = rt, fill = condition)) +
geom_bar(stat = 'identity', position = position_dodge(), show.legend = TRUE) +
geom_errorbar(aes(ymin= rt - se, ymax= rt + se), width=.2,
position=position_dodge(.9)) +
ggtitle("Indirect Measure") +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
labs(fill = "CS Variability") +
scale_y_continuous (name = "Reaction Times")
barplotRT
barplotRT <- ggplot(dataRT, aes (x = type_specific, y = rt, fill = condition)) +
facet_grid(. ~ measure) +
stat_boxplot(geom = "errorbar") +
geom_boxplot(show.legend = TRUE) +
ggtitle("Indirect Measure") +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
labs(fill = "CS Variability") +
scale_y_continuous (name = "Reaction Times")
barplotRT
dataRT <- dataRT[!dataRT$rt > 5000,]
head(dataRT)
#Boxplot
barplotRT <- ggplot(dataRT, aes (x = type_specific, y = rt, fill = condition)) +
stat_boxplot(geom = "errorbar") +
geom_boxplot(show.legend = TRUE) +
ggtitle("Indirect Measure") +
scale_fill_brewer(palette = "Paired") +
theme_classic() +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
labs(fill = "CS Variability") +
scale_y_continuous (name = "Reaction Times")
barplotRT
#Plot
plot.RT <- aggregate(rt ~ pres_order, dataRT, mean)
plot.RT$se <- aggregate(rt ~ pres_order, dataRT, se)[[3]]
head(plot.RT)
#generate data set with reaction times
dataRT <- aggregate(rt ~ subject + condition_code + condition + measure + val + type + type_specific + presOrder, indirect, mean )
#generate data set with reaction times
dataRT <- aggregate(rt ~ subject + condition_code + condition + measure + val + type + type_specific + pres_order, indirect, mean )
View(indirect)
View(indirect)
#generate data set with reaction times
dataRT <- aggregate(rt ~ subject + condition_code + condition + measure + val + type + type_specific + nr_pres, indirect, mean )
dataRT <- dataRT[!dataRT$rt > 5000,]
head(dataRT)
#Plot
plot.RT <- aggregate(rt ~ nr_pres, dataRT, mean)
plot.RT$se <- aggregate(rt ~ nr_pres, dataRT, se)[[3]]
head(plot.RT)
plot.RT$se <- aggregate(rt ~ nr_pres, dataRT, se)[[2]]
head(plot.RT)
#aggregate(prob ~ val + type_specific, dataIndirect, mean)
plot.presOrder <- ggplot(presOrder, aes (x = nr_pres, y = rt)) +
geom_point(show.legend = TRUE) +
ggtitle("Reaction Times") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_color_brewer(palette = "Set1") +
scale_y_continuous(name = "Presentation Order")
plot.presOrder
#aggregate(prob ~ val + type_specific, dataIndirect, mean)
plot.presOrder <- ggplot(plot.RT, aes (x = nr_pres, y = rt)) +
geom_point(show.legend = TRUE) +
ggtitle("Reaction Times") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_color_brewer(palette = "Set1") +
scale_y_continuous(name = "Presentation Order")
plot.presOrder
#aggregate(prob ~ val + type_specific, dataIndirect, mean)
plot.presOrder <- ggplot(plot.RT, aes (x = nr_pres, y = rt)) +
geom_point(show.legend = TRUE) +
ggtitle("Presentation order of trails") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_color_brewer(palette = "Set1") +
scale_y_continuous(name = "Reaction Times") +
scale_x_continuous(name = "Presentation Order")
plot.presOrder
categoryIndirect <- aggregate(response ~  condition  + val + type_specific + category, indirect, sum )
categoryIndirect$nr_val <- aggregate(response ~ condition + val + type_specific + category, indirect, length)[[5]]
categoryIndirect$prob <- (categoryIndirect$response/categoryIndirect$nr_val)
#head(categoryIndirect)
plot.categories <- ggplot(categoryIndirect, aes (x = category, y = prob, fill = val)) +
stat_boxplot(geom = "errorbar") +
geom_boxplot(show.legend = TRUE) +
geom_hline(yintercept = 0.5, color = "red") +
ggtitle("Categories") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_fill_brewer(palette = "Blues")
plot.categories
#Plot
categoryIndirect <- aggregate(response ~  val + cs_selected, indirect, sum )
#Plot
CSselectedIndirect <- aggregate(response ~  val + cs_selected, indirect, sum )
head(CSselectedIndirect)
CSselectedIndirect$nr_val <- aggregate(response ~ condition + val + type_specific + category, indirect, length)[[3]]
CSselectedIndirect$nr_val <- aggregate(response ~ val + cs_selected, indirect, length)[[3]]
#Plot
CSselectedIndirect <- aggregate(response ~  val + cs_selected, indirect, sum )
CSselectedIndirect$nr_val <- aggregate(response ~ val + cs_selected, indirect, length)[[3]]
CSselectedIndirect$prob <- (CSselectedIndirect$response/CSselectedIndirect$nr_val)
head(CSselectedIndirect)
CsselectedPlot <- ggplot(CSselectedIndirect, aes (x = cs_selected, y = prob, col = val)) +
geom_point(show.legend = TRUE) +
ggtitle("Single CSs") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_fill_brewer(palette = "Blues")
CsselectedPlot
targetsIndirect <- aggregate(response ~ target + val + condition + type_specific, indirect, sum)
targetsIndirect$nr_val <- aggregate(response ~ target + val + condition + type_specific, indirect, length) [[5]]
targetsIndirect$prob <- (targetsIndirect$response/targetsIndirect$nr_val)
targetsIndirect
head(targetsIndirect)
for (target in unique(targetsIndirect$target)){
for (name in unique(targetsIndirect$type_specific)){
temp <- targetsIndirect[targetsIndirect$target == target & targetsIndirect$type_specific == name,];
targetsIndirect$diff[targetsIndirect$target == target & targetsIndirect$type_specific == name] <- temp$prob[temp$val == "pos"] - temp$prob[temp$val == "neg"]
}
}
head(targetsIndirect)
View(targetsIndirect)
View(targetsIndirect)
lmProbTargets <- lmer(diff ~ type_specific*condition*val + (type_specific|target), targetsIndirect)
summary(lmProbTargets)
plot.targets <- aggregate(prob ~ target + val, targetsIndirect, mean)
plot.targets$target <- as.factor(plot.targets$target)
for(target in unique(plot.targets$target)){
temp <- plot.targets[plot.targets$target == target,]
plot.targets$diff[plot.targets$target == target] <- temp$prob[temp$val == "pos"] - temp$prob[temp$val == "neg"]
}
plotTarget <- ggplot(plot.targets[plot.targets$val == "neg",], aes (x = target, y = diff)) +
geom_point() +
ggtitle("Targets on x-axis") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_color_brewer(palette = "Set1") +
scale_y_continuous(name = "Difference (Prob. Angenehm | Pos) - (Prob Angenehm | Neg)")
plotTarget
plotTarget <- ggplot(plot.targets, aes (x = target, y = prob, col = val)) +
geom_point() +
ggtitle("Targets on x-axis") +
theme(plot.title = element_text (hjust = 0.5, face = "bold", size = 12)) +
scale_color_brewer(palette = "Set1") +
scale_y_continuous(name = "Prob. 'angenehm'")
plotTarget
